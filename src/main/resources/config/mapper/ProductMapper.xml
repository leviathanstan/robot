<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.robot.dao.ProductDao">
    <resultMap id="productMap" type="com.robot.entity.Product" autoMapping="true">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="img" column="cover"/>
        <result property="summary" column="product_summary"/>
        <result property="introduction" column="product_introduction"/>
        <result property="pattern" column="product_pattern"/>
        <result property="load" column="product_load"/>
        <result property="axis" column="product_axis"/>
        <result property="type" column="product_type"/>
        <result property="brand" column="pro_brand"/>
        <result property="residence" column="residence"/>
        <result property="format" column="pro_format"/>
        <result property="effectTime" column="pro_effect_time"/>
        <result property="lastUpdateTime" column="pro_last_up_time"/>
        <result property="price" column="pro_price"/>
    </resultMap>
    <!-- 首页产品 -->
    <select id="getProductLibrary" resultMap="productMap">
        select id, name, pro_last_up_time, cover from product_library order by pro_last_up_time desc limit 0, 16;
    </select>
    <!--搜索-->
    <select id="findProductIf" parameterType="map" resultMap="productMap">
        select id,name,cover,pro_last_up_time,product_introduction,pro_price from product_library where 1=1
        <if test="content!=null and content.trim().length()>0">
            and locate(#{content},name)>0 or locate(#{content},product_introduction)>0
        </if>
        order by pro_last_up_time desc
    </select>
    <!--搜索统计-->
    <select id="getSearchCount" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(id) from product_library where 1=1
        <if test="_parameter!=null and _parameter.trim().length()>0">
            and (locate(#{content},name)>0 or locate(#{content},product_introduction)>0)
        </if>
    </select>
    <select id="getProductInfo" parameterType="int" resultMap="productMap">
        select * from product_library where id=#{id}
    </select>
    <!--添加产品-->
    <insert id="addProduct" parameterType="com.robot.entity.Product"  keyProperty="id">
        <selectKey resultType="int" keyProperty="id" order="AFTER">
            select @@identity
        </selectKey>
        insert into product_library(product_introduction,pro_last_up_time,name,cover)
        values(#{introduction},#{lastUpdateTime},#{name},#{img})
    </insert>
    <!--删除产品-->
    <delete id="deleteProduct">
        delete from product_library where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <!--修改产品-->
    <update id="updateProduct" parameterType="com.robot.entity.Product">
        update product_library set id=#{id}
        <if test="name!=null and name.trim().length()>0">
            , name=#{name}
        </if>
        <if test="img!=null and img.trim().length()>0">
            , cover = #{img}
        </if>
        <if test="introduction!=null and introduction.trim().length()>0">
            , product_introduction = #{introduction}
        </if>
        <if test="lastUpdateTime!=null and lastUpdateTime.trim().length()>0">
            , pro_last_up_time = #{lastUpdateTime}
        </if>
        where id=#{id}
    </update>
    <!--搜索热门产品-->
    <select id="findHotProduct" resultMap="productMap">
        select id,name from product_library order by view_count desc limit 10;
    </select>
    <!--浏览数增加-->
    <update id="addProCount" parameterType="Integer">
        update  product_library set view_count = ((select view_count from (select view_count from product_library where id = #{id})p1)+1) where id = #{id};
    </update>
    <select id="selectProductByIds" resultMap="productMap">
        select id,name,cover,pro_last_up_time,product_introduction,pro_price from product_library where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <!--添加会员产品-->
    <insert id="insertMemberProduct" >
        insert into member_product(product_id,user_id) values(#{productId},#{userId})
    </insert>
    <!---删除会员产品-->
    <delete id="deleteMemberProduct">
        delete from member_product where product_id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <!--搜索某会员管理的产品id-->
    <select id="selectMemberProduct" resultType="java.lang.Integer">
        select product_id from member_product where user_id=#{userId}
    </select>

    <select id="selectMemberProductByUIds" resultType="java.lang.Integer">
        select product_id from member_product where user_id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectIndexMemberProduct" resultType="com.robot.entity.Product">
        select id, name, pro_last_up_time, cover from product_library where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by pro_last_up_time desc limit #{number}
    </select>

    <!--数量-->
    <select id="count" resultType="java.lang.Integer">
        select count(*) from product_library
    </select>
</mapper>